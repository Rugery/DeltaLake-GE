{
  "expectations": [
    {
      "description": "Verifica que los valores de `email` comiencen con uno de los prefijos v\u00e1lidos: user.",
      "id": "b97d42cb-7b45-4573-aedb-139adc017bef",
      "kwargs": {
        "column": "email",
        "regex": "^(user)"
      },
      "meta": {
        "description": "Verifica que los valores de `email` comiencen con uno de los prefijos v\u00e1lidos: user.",
        "name": "Expectativas de Referencia de Caracteres"
      },
      "type": "expect_column_values_to_match_regex"
    },
    {
      "description": "Verifica que los valores de `id_cliente` sean \u00fanicos.",
      "id": "40d012b2-7073-4c38-837b-42b2128de593",
      "kwargs": {
        "column": "id_cliente"
      },
      "meta": {
        "description": "Verifica que los valores de `id_cliente` sean \u00fanicos.",
        "name": "Expectativas valor \u00fanico"
      },
      "type": "expect_column_values_to_be_unique"
    },
    {
      "description": "Verifica que los valores de la columna `cod_municipio` est\u00e9n en la lista de referencia.",
      "id": "ee64bbac-68e3-4611-8a58-a625ccc10aae",
      "kwargs": {
        "column": "cod_municipio",
        "value_set": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ]
      },
      "meta": {
        "description": "Verifica que los valores de la columna `cod_municipio` est\u00e9n en la lista de referencia.",
        "name": "Expectativa Valores por referencia"
      },
      "type": "expect_column_values_to_be_in_set"
    },
    {
      "description": "Verifica que los valores de la columna `ciudad` est\u00e9n en la lista de referencia.",
      "id": "953e176a-d97c-4fb1-a5d1-4071f1f4ab64",
      "kwargs": {
        "column": "ciudad",
        "value_set": [
          "Ciudad1",
          "Ciudad2",
          "Ciudad3",
          "Ciudad4",
          "Ciudad5",
          "Ciudad6",
          "Ciudad7",
          "Ciudad8",
          "Ciudad9"
        ]
      },
      "meta": {
        "description": "Verifica que los valores de la columna `ciudad` est\u00e9n en la lista de referencia.",
        "name": "Expectativa Valores por referencia"
      },
      "type": "expect_column_values_to_be_in_set"
    },
    {
      "description": "Verifica que los valores de `email` coincidan con el patr\u00f3n `^.*@.*\\.com$`.",
      "id": "990fd6fd-eddb-4e97-9116-797ebd31cc06",
      "kwargs": {
        "column": "email",
        "regex": "^.*@.*\\.com$"
      },
      "meta": {
        "description": "Verifica que los valores de `email` coincidan con el patr\u00f3n `^.*@.*\\.com$`.",
        "name": "Expectativas de Valores con Patr\u00f3n"
      },
      "type": "expect_column_values_to_match_regex"
    },
    {
      "description": "Verifica que las combinaciones de columnas email, ciudad est\u00e9n en la lista de valores permitidos",
      "id": "947bd6b8-e1c1-4735-9abe-e4257c7af734",
      "kwargs": {
        "unexpected_rows_query": "\n    SELECT *\n    FROM {batch} AS t\n    WHERE concat_ws('|', email, ciudad) NOT IN ('user1@example.com|Ciudad15', 'user32@example.com|Ciudad2', 'user3@example.com|Ciudad3', 'user4@example.com|Ciudad4', 'user5@example.com|Ciudad5', 'user6@example.com|Ciudad6', 'user31@example.com|Ciudad7', 'user8@example.com|Ciudad8', 'user9@example.com|Ciudad9')"
      },
      "meta": {
        "description": "Verifica que las combinaciones de columnas email, ciudad est\u00e9n en la lista de valores permitidos",
        "name": "Validaci\u00f3n combinaciones m\u00faltiples con SQL"
      },
      "type": "unexpected_rows_expectation"
    },
    {
      "description": "Verifica que los valores de `id_cliente` no sean nulos.",
      "id": "0a2dc55e-6b18-4b7b-bd8a-e2cc0e619589",
      "kwargs": {
        "column": "id_cliente"
      },
      "meta": {
        "description": "Verifica que los valores de `id_cliente` no sean nulos.",
        "name": "Expectativas de Valores No Nulos"
      },
      "type": "expect_column_values_to_not_be_null"
    },
    {
      "description": "Verifica que los valores de `ciudad` sean del tipo `StringType`.",
      "id": "50d038a8-f325-4c13-a490-fc6f0609284d",
      "kwargs": {
        "column": "ciudad",
        "type_": "StringType"
      },
      "meta": {
        "description": "Verifica que los valores de `ciudad` sean del tipo `StringType`.",
        "name": "Expectativas de Valores de Tipo"
      },
      "type": "expect_column_values_to_be_of_type"
    },
    {
      "description": "Verifica que la longitud de los valores de `email` est\u00e9 entre 5 y 50.",
      "id": "2edbd63d-437b-43e0-86d6-dd82a1f04c3c",
      "kwargs": {
        "column": "email",
        "max_value": 50,
        "min_value": 5
      },
      "meta": {
        "description": "Verifica que la longitud de los valores de `email` est\u00e9 entre 5 y 50.",
        "name": "Expectativas de Longitud de Valores"
      },
      "type": "expect_column_value_lengths_to_be_between"
    },
    {
      "description": "Verifica que la longitud de los valores de `ciudad` sea exactamente 8.",
      "id": "a0ae4299-c5a9-43a9-bc42-2a2c7db737d8",
      "kwargs": {
        "column": "ciudad",
        "value": 8.0
      },
      "meta": {
        "description": "Verifica que la longitud de los valores de `ciudad` sea exactamente 8.",
        "name": "Expectativas de Longitud de Valores"
      },
      "type": "expect_column_value_lengths_to_equal"
    },
    {
      "description": "Verifica que los valores de `cod_municipio` est\u00e9n entre 1 y 20.",
      "id": "7f7ef479-45a9-4195-bdcd-1d15d2b3e93a",
      "kwargs": {
        "column": "cod_municipio",
        "max_value": 20.0,
        "min_value": 1.0
      },
      "meta": {
        "description": "Verifica que los valores de `cod_municipio` est\u00e9n entre 1 y 20.",
        "name": "Expectativas de Valores Entre"
      },
      "type": "expect_column_values_to_be_between"
    },
    {
      "description": "Verifica que las columnas esperadas id_cliente, nombre, email, cod_municipio, ciudad existan en el DataFrame.",
      "id": "6659f3f1-ae64-4dc8-b2f0-b94afd36e7d6",
      "kwargs": {
        "column_set": [
          "id_cliente",
          "nombre",
          "email",
          "cod_municipio",
          "ciudad"
        ]
      },
      "meta": {
        "description": "Verifica que las columnas esperadas id_cliente, nombre, email, cod_municipio, ciudad existan en el DataFrame.",
        "name": "Expectativas de Columnas Esperadas"
      },
      "type": "expect_table_columns_to_match_set"
    },
    {
      "description": "Verifica que la combinaci\u00f3n de columnas id_cliente, nombre sea \u00fanica en todas las filas.",
      "id": "c15cccf8-775b-4dde-b3d1-5c5b8a06c112",
      "kwargs": {
        "column_list": [
          "id_cliente",
          "nombre"
        ]
      },
      "meta": {
        "description": "Verifica que la combinaci\u00f3n de columnas id_cliente, nombre sea \u00fanica en todas las filas.",
        "name": "Combinaci\u00f3n \u00fanica de columnas"
      },
      "type": "expect_compound_columns_to_be_unique"
    },
    {
      "description": "Verifica que los valores de `cod_municipio` no coincidan con el patr\u00f3n `.*\\s+.*`.",
      "id": "0db61d33-5f68-40cf-a0c8-7048aee4142b",
      "kwargs": {
        "column": "cod_municipio",
        "regex": ".*\\s+.*"
      },
      "meta": {
        "description": "Verifica que los valores de `cod_municipio` no coincidan con el patr\u00f3n `.*\\s+.*`.",
        "name": "Expectativas de Valores No Coinciden con Patr\u00f3n"
      },
      "type": "expect_column_values_to_not_match_regex"
    },
    {
      "description": "Verifica que los valores de la columna `ciudad` no est\u00e9n en la lista de referencia.",
      "id": "0b8ca096-eae0-4ffc-9e87-6536fb47c498",
      "kwargs": {
        "column": "ciudad",
        "value_set": [
          "Ciudad8",
          "Ciudad1"
        ]
      },
      "meta": {
        "description": "Verifica que los valores de la columna `ciudad` no est\u00e9n en la lista de referencia.",
        "name": "Expectativa Valores Distintos por Referencia"
      },
      "type": "expect_column_values_to_not_be_in_set"
    },
    {
      "description": "Verifica que la cantidad de filas est\u00e9 entre 1 y 50.",
      "id": "6e193612-2962-4892-8624-b5a7e4b240db",
      "kwargs": {
        "max_value": 50,
        "min_value": 1
      },
      "meta": {
        "description": "Verifica que la cantidad de filas est\u00e9 entre 1 y 50.",
        "name": "Expectativas de Cantidad de Filas"
      },
      "type": "expect_table_row_count_to_be_between"
    },
    {
      "description": "Verifica que los valores de `email` no sean cadenas vac\u00edas.",
      "id": "e0befa63-e385-4527-b856-65108174ac15",
      "kwargs": {
        "column": "email",
        "regex": "^$"
      },
      "meta": {
        "description": "Verifica que los valores de `email` no sean cadenas vac\u00edas.",
        "name": "Expectativa valores no vac\u00edos"
      },
      "type": "expect_column_values_to_not_match_regex"
    }
  ],
  "id": "d79435d4-ad3a-4eb8-84eb-27dd01a5e313",
  "meta": {
    "great_expectations_version": "1.5.0"
  },
  "name": "suite_clientes",
  "notes": null
}